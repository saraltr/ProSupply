@page "/suppliers"

@using Microsoft.EntityFrameworkCore
@using CSE_325_group_project.Models;
@using CSE_325_group_project.Data;
@inject AppDbContext _dbContext
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Suppliers Directory</PageTitle>

<div>
    <SearchBar OnSearch="PerformSearch" />
</div>
<div>
    <button @onclick="GoBack" class="back-button">
            <i class="fas fa-arrow-left"></i> Back
    </button>
</div>

@if (suppliers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 py-3">
        @foreach (var s in suppliers)
        {
            <div class="col">
                <div class="card h-100 shadow-sm supplierCard">
                    <NavLink class="text-decoration-none text-dark" href="@($"/suppliers/{GenerateSlug(s.SupplierName)}")">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <img src="img/@s.SupplierLogo" alt="@s.SupplierName Logo" class="me-3" width="50"
                                    height="40" />
                                <h5 class="card-title mb-0">@s.SupplierName</h5>
                            </div>

                            <p class="card-text text-muted mb-2">@s.SupplierDescription</p>
                            <div class="border-top pt-2">
                                <h6 class="mb-0 text-primary">@s.Category.Category_name</h6>
                                <small class="text-muted">@s.Category.Category_description</small>
                            </div>
                        </div>
                    </NavLink>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Supplier> suppliers = new();

    private List<Supplier> fetchedSuppliers = new();
    private string searchTerm = "";
    private List<Supplier> filteredSuppliers = new();

    protected override async Task OnInitializedAsync()
    {
        fetchedSuppliers = await _dbContext.Suppliers
        .Include(c => c.Category)
        .AsNoTracking()
        .ToListAsync();
        suppliers = fetchedSuppliers;
    }

    private string GenerateSlug(string name)
    {
        return name.ToLower().Replace(" ", "-");
    }

        private void PerformSearch(string term)
    {
        Console.WriteLine(term);
        searchTerm = term;
        filteredSuppliers = suppliers
            .Where(c => c.SupplierName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
            .ToList();


        suppliers = filteredSuppliers;
    }
    private void GoBack()
     {
        Console.WriteLine("I will go back");
        suppliers = fetchedSuppliers;
      
    }
}
