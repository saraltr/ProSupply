@page "/suppliers/{name}"
@using Microsoft.EntityFrameworkCore
@using CSE_325_group_project.Models;
@using CSE_325_group_project.Data;
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AppDbContext _dbContext
@inject NavigationManager Navigation

<PageTitle>@(supplier?.SupplierName ?? "Supplier Page Not Found")</PageTitle>

@if (supplier == null)
{
    <div class="alert alert-danger text-center py-4">
        <strong>Supplier not found</strong>
    </div>
}
else
{
    <div class="card rounded-3 mb-5 border-0">
        <div class="card-header bg-white border-bottom-0 d-flex align-items-center">
            <img src="img/@supplier.SupplierLogo" alt="@supplier.SupplierName Logo" class="me-3 rounded"
                style="width: 60px; height: 60px; object-fit: contain;" />
            <div>
                <h3 class="mb-0">@supplier.SupplierName</h3>
                <small class="text-muted">@supplier.Category.Category_description</small>
            </div>
        </div>

        <div class="card-body pt-0">
            <hr />

            <div class="row g-4">
                <div class="col-md-6">
                    <p class="mb-2"><i class="bi bi-telephone-fill text-primary me-2"></i><strong>Phone:</strong>
                        @supplier.SupplierPhone</p>
                    <p class="mb-2"><i class="bi bi-envelope-fill text-primary me-2"></i><strong>Email:</strong>
                        @supplier.SupplierEmail</p>
                    <p class="mb-2"><i class="bi bi-geo-alt-fill text-primary me-2"></i><strong>Address:</strong>
                        @supplier.SupplierAddress</p>
                </div>
                <div class="col-md-6">
                    <p class="mb-2"><i class="bi bi-info-circle-fill text-primary me-2"></i><strong>Description:</strong>
                        @supplier.SupplierDescription</p>
                    <p class="mb-2"><i class="bi bi-tag-fill text-primary me-2"></i><strong>Category:</strong>
                        @supplier.Category?.Category_name</p>
                </div>
            </div>
        </div>
    </div>

    @if (supplier.Services == null || !supplier.Services.Any())
    {
        <div class="alert alert-warning text-center py-4">
            <strong>No services available for this supplier.</strong>
        </div>
    }
    else
    {
        <div class="card shadow-sm rounded-lg">
            <div class="card-header">
                <h3 class="mb-0">ðŸ“‹ Available Services</h3>
            </div>

            <div class="card-body">
                <!-- Hide table on small screens -->
                <div class="d-none d-md-block">
                    <div class="table-responsive-md">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">Services</th>
                                    <th scope="col" class="d-none d-md-table-cell">Description</th>
                                    <th scope="col">Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var service in supplier.Services)
                                {
                                    <tr>
                                        <td>@service.ServiceName</td>
                                        <td class="d-none d-md-table-cell">@service.ServiceDescription</td>
                                        <td><strong>$@service.ServicePrice</strong></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="d-md-none">
                    @foreach (var service in supplier.Services)
                    {
                        <div class="border p-3 rounded mb-2 shadow-sm">
                            <h5 class="mb-1">@service.ServiceName</h5>
                            <p class="text-muted">@service.ServiceDescription</p>
                            <strong class="text-success">$@service.ServicePrice</strong>
                        </div>
                    }
                </div>
                <div class="d-flex justify-content-around mt-4">
                    <NavLink href="@($"/order/{supplier.SupplierId}/{userId}")"
                        class="btn btn-success btn-sm d-flex align-items-center justify-content-center px-4 py-2">
                        <i class="bi bi-cart-plus me-2"></i> Place Order
                    </NavLink>
                    <NavLink href="@($"/quote/{supplier.SupplierId}/{userId}")"
                        class="btn btn-info text-white btn-sm d-flex align-items-center justify-content-center px-4 py-2">
                        <i class="bi bi-file-earmark-ruled me-2"></i> Request Quote
                    </NavLink>
                </div>


            </div>
        </div>
    }
}

@code {
    [Parameter]
    public string name { get; set; } = string.Empty;

    private Supplier? supplier;
    private int userId;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        var userIdString = user.FindFirst("UserId")?.Value;

        if (int.TryParse(userIdString, out int parsedUserId))
        {
            userId = parsedUserId;
        }
        string formattedName = name.Replace("-", " ");

        supplier = await _dbContext.Suppliers
        .AsNoTracking()
        .Include(s => s.Category)
        .Include(s => s.Services)
        .FirstOrDefaultAsync(s => s.SupplierName.ToLower() == formattedName.ToLower());
    }
}