@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@using System.Globalization


<div class="top-nav background-image-container">
    @if (!IsHomePage)
    {
        <button class="back-btn" onclick="history.back()">
            <span class="bi bi-chevron-left"> Back</span>
        </button>
    }
    <h2>@FormattedRoute</h2>
    <button class="login-btn">Sign In</button>
</div>

@code {
    private string FormattedRoute = "";
    private bool IsHomePage = false; // check if it's the home page
    private string userName = "John"; // to replace with actual user name from our authentication system

    protected override void OnInitialized()
    {
        var uri = NavManager.Uri;
        var path = new Uri(uri).AbsolutePath.Trim('/');

        // Check if the current route is the home page
        IsHomePage = string.IsNullOrEmpty(path); // Home page if the path is empty

        if (IsHomePage)
        {
            FormattedRoute = userName != null ? $"Welcome back, {userName}!" : "Welcome to ProSupply! Explore our supplies.";
        }
        @* for the supplier pages *@
        else if (path.StartsWith("suppliers/"))
        {
            var supplierSlug = path.Replace("suppliers/", "").Replace("-", " ");

            FormattedRoute = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(supplierSlug);
        }
        else
        {
            switch (true)
            {
                // case for supplier Pages
                case var _ when path.StartsWith("suppliers/"):
                    var supplierSlug = path.Replace("suppliers/", "").Replace("-", " ");
                    FormattedRoute = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(supplierSlug);
                    break;

                // case for order pages
                case var _ when path.StartsWith("order"):
                    FormattedRoute = "Order";
                    break;

                // case for edit pages
                case var _ when path.Contains("edit_"):
                    var editPageName = path.Split('/')[0].Replace("edit_", "").Replace("-", " ");
                    FormattedRoute = $"Edit {CultureInfo.CurrentCulture.TextInfo.ToTitleCase(editPageName)}";
                    break;

                // default case for generic pages
                default:
                    var formattedPath = path.Replace("-", " ");
                    FormattedRoute = char.ToUpper(formattedPath[0]) + formattedPath.Substring(1);
                    break;
            }
        }
    }
}